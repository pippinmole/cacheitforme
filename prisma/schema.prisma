// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id   String @id @default(cuid())
  name String

  caches Cache[]

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Cache {
  id    String @id @default(cuid())
  name  String
  url   String

  cachedJson  String
  lastCached DateTime?

  // Default to 1 day from now
  expiresAt DateTime @default(dbgenerated("NOW() + interval '1 day'"))
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Add the foreign key to the User model
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  refresh_token_expires_in Int?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}